#include <stdio.h> 
#include <dos.h> 
#include <time.h> 
#include <bios.h> 
#include <conio.h>

unsigned char DRV0, DRV1, SNS0, SNS1, SNS2;
int Esc, esc;
void writeRC( char data ) //Установка состояний двигателя, подключение портов
{
   outportb( 0x37A, 0x04 );
   outportb( 0x378, data );
   outportb( 0x37A, 0x00 );
   delay(1);
   outportb( 0x37A, 0x04 );
}

void writeRD( char data )	//Выбор степени и направления двигателя; вкл/выкл двигателя
{
   outportb( 0x37A, 0x0E );
   outportb( 0x378, data );
   outportb( 0x37A, 0x0A );
   delay(1);
   outportb( 0x37A, 0x04 );
}

char readRD()			//Считывание информации с датчиков
{
   static char ans=0;
   outportb( 0x37A, 0x2E );
   outportb( 0x378, 0xFF );
   outportb( 0x37A, 0x2F );
   delay(1);
   ans = inportb( 0x378 );
   outportb( 0x37A, 0x04 );
   return( ans );
}
void write(unsigned char DRV0){  //Функция движения УРТК 
writeRC(0x11);
writeRD(0x80);
writeRD(DRV0);
}


Begining(){			//Функция движения к началу координат
esc=0;
while(esc != 27){
writeRC(0x13);
SNS0=readRD();
SNS1=readRD();
if  (  (((SNS0>>0x01)&1)==0) && (((SNS0>>0x04)&1)==0)		//Проверка достижения концевых датчиков
&&(((SNS1>>0x01)&1)==0) ) {esc=27;}
write(0x2A);
if (kbhit () != 0)
esc=getch ();
}
}

Move(){	//Функция описания прямоугольника в плоскости XOZ
esc=0;
clrscr();
gotoxy(7, 1); printf("Drawing  rectangle");
gotoxy(7, 2); printf("Please, wait...");
gotoxy(7, 3); printf("Exit = Esc");
while (esc !=27){
writeRC(0x13);
SNS0=readRD();
if(((SNS0>>0x00)&1)==0){esc = 27;}
write(0x01);
if (kbhit () != 0)
esc=getch();
}
esc=0;
while (esc !=27){
writeRC(0x13);
SNS0=readRD();
if(((SNS0>>0x03)&1)==0){esc = 27;}
write(0x04);
if (kbhit () != 0)
esc=getch();
}
esc=0;
while (esc !=27){
writeRC(0x13);
SNS0=readRD();
if(((SNS0>>0x01)&1)==0){esc = 27;}
write(0x02);
if (kbhit () != 0)
esc=getch();
}
esc=0;
while (esc !=27){
writeRC(0x13);
SNS0=readRD();
if(((SNS0>>0x04)&1)==0){esc = 27;}
write(0x08);
if (kbhit () != 0)
esc=getch();
}
}

Program(){			//Программа реализации задания
while(Esc !=27){
clrscr();
gotoxy(7, 1); printf ("You can choose the order to complete the task. To select, press the keys q-r, to exit press Esc");
gotoxy(7, 2); printf("To moving to the beginning, press q");	//Меню для выбора режима
gotoxy(7, 3); printf("To moving to the center, press w");
gotoxy(7, 4); printf("To moving to the corner, press e");
gotoxy(7, 5); printf("To drawing  rectangle, press r");
switch(getch()){
case 113: clrscr();
gotoxy(7, 1); printf("Moving to the beginning");
gotoxy(7, 2); printf("Please, wait...");
Begining(); break;
case 119: clrscr();
gotoxy(7, 1); printf("Moving to the center");
write(0x01);
delay(14000);
write(0x00);
gotoxy(7, 2); printf("Waiting 3 sec...");
delay(3000);   break;
case 101: clrscr();
gotoxy(7, 1); printf("Moving to the corner");
Begining();
gotoxy(7, 2); printf("Waiting 3 sec...");
delay(3000);  break;
case 114: Move();
case 27: write(0x00); Esc=27; break;
}
}
clrscr();
gotoxy(7, 2); printf("The program is complete, press any key");
getch();
}
	
void main(){	 //Основная программа
while(Esc !=27){
clrscr();
gotoxy(7, 1); printf("_______________MENU_______________"); //Меню пользователя
gotoxy(7, 2); printf("To start working, press SpaceBar");
gotoxy(7, 3); printf("Help - press 1");
gotoxy(7, 4); printf("To exit, press Esc");
switch(getch()){
case 32: Program(); break;
case 49: clrscr();
printf ("User's help"); 
printf("If you press the q key, the workpiece will be moved to its original position at the origin.
By pressing the key w - the working element will move to the center of the predetermined side; 
Delay 3 seconds after the end of the move.
When pressing the key e - the operating element to move from the center in advance
Specified angle; Delay 3 seconds after the end of the move.
When you press the r key, the work item will describe the rectangle from the corner in the preset plane.
When you press the Esc key, the work item will stop any movement, the program will be completed.
Each mode is executed by pressing the keys and can be stopped at any time by Esc. 
The user interface gives not only the ability to select the sequence of the job, 
but also interrupts execution at any time."); break;	 //Справка пользователя
getch();
break;
case 27: write(0x00); Esc=27; break;
}
write(0x00);
}
clrscr();
gotoxy(7, 1); printf("Exit. Press any key...");
getch();
}
